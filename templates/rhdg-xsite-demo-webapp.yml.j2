apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: {{ webapp_deployment_name }}
    namespace: {{ common_namespace }}
  spec:
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}  
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentConfig: {{ webapp_deployment_name }}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: {{ webapp_deployment_name }}-ping
    namespace: {{ common_namespace }}
  spec:
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}  
    ports:
    - name: ping
      port: 8888
      protocol: TCP
      targetPort: 8888
    selector:
      deploymentConfig: {{ webapp_deployment_name }}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: {{ webapp_deployment_name }}
    namespace: {{ common_namespace }}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentConfig: {{ webapp_deployment_name }}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}
      spec:
        containers:
        - env:
          - name: RHDG_CACHE_NAME
            value: {{ common_cache_name }}
          - name: RHDG_SITE_NAME
            value: {{ item.site_name }}  
          - name: JGROUPS_PING_PROTOCOL
            value: dns.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: {{ webapp_deployment_name }}-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: MQ_CLUSTER_PASSWORD
            value: GvNAYLrw
          - name: MQ_QUEUES
          - name: MQ_TOPICS
          - name: JGROUPS_CLUSTER_PASSWORD
            value: 11Xlx65V
          - name: AUTO_DEPLOY_EXPLODED
            value: "false"
          - name: ENABLE_GENERATE_DEFAULT_DATASOURCE
            value: "false"
          image: {{ webapp_deployment_name }}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: {{ webapp_deployment_name }}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 75
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - {{ webapp_deployment_name }}
        from:
          kind: ImageStreamTag
          name: {{ webapp_deployment_name }}:latest
          namespace: {{ common_namespace }}
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: {{ webapp_deployment_name }}
    namespace: {{ common_namespace }}
  spec:
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}  
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: {{ webapp_deployment_name }}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM jboss-eap73-runtime-openshift:7.3
        COPY /server $JBOSS_HOME
        USER root
        RUN chown -R jboss:root $JBOSS_HOME && chmod -R ug+rwX $JBOSS_HOME
        USER jboss
        CMD $JBOSS_HOME/bin/openshift-launch.sh
      images:
      - from:
          kind: ImageStreamTag
          name: {{ webapp_deployment_name }}-build-artifacts:latest
        paths:
        - destinationDir: .
          sourcePath: /s2i-output/server/
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: jboss-eap73-runtime-openshift:7.3
          namespace: openshift
        imageOptimizationPolicy: SkipLayers
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: {{ webapp_deployment_name }}-build-artifacts:latest
        lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/demo/{{ webapp_deployment_name }}-build-artifacts@sha256:13421068c185671c344b5b0821657072186005d21b0c3ff8d8ebcb004cb507d8
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: {{ webapp_deployment_name }}-build-artifacts
    namespace: {{ common_namespace }}
  spec:
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}  
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: {{ webapp_deployment_name }}-build-artifacts:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: main
        uri: {{ webapp_deployment_src_url }}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
        - name: MAVEN_ARGS_APPEND
          value: -Dcom.redhat.xpaas.repo.jbossorg
        - name: GALLEON_PROVISION_LAYERS
        - name: GALLEON_PROVISION_DEFAULT_FAT_SERVER
          value: "true"
        - name: ARTIFACT_DIR
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-eap73-openshift:7.3
          namespace: openshift
        incremental: true
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: yu1WBrkD
      type: GitHub
    - generic:
        secret: dyQkLer3
      type: Generic
    - imageChange:
      type: ImageChange
    - type: ConfigChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: {{ webapp_deployment_name }}
    namespace: {{ common_namespace }}
  spec:
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}  
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: image-registry.openshift-image-registry.svc:5000/demo/{{ webapp_deployment_name }}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: {{ webapp_deployment_name }}-build-artifacts
    namespace: {{ common_namespace }}
  spec:
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}  
    lookupPolicy:
      local: false
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: {{ webapp_deployment_name }}
    namespace: {{ common_namespace }}
  spec:
    template:
      metadata:
        labels:
          application: {{ webapp_deployment_name }}
          deploymentConfig: {{ webapp_deployment_name }}
        name: {{ webapp_deployment_name }}  
    to:
      kind: Service
      name: {{ webapp_deployment_name }}
      weight: 100
    wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""